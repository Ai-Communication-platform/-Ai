"""Ai.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vonf9wC7uK4NkEk-_WsZDYuEH4K2zDlv

---
# 01. 활경 설정
---
"""
import schedule
import time
import os
import openai
import json
import unicodedata
import pandas as pd
from google.cloud import speech
from google.cloud import texttospeech
from datetime import datetime, timedelta
import pygame
import firebase_admin
from firebase_admin import credentials, initialize_app, storage
import requests
from moviepy.editor import AudioFileClip

def chatgpt_call(model, messages):
    # ChatGPT API 호출하기
    response = openai.ChatCompletion.create(
        model=model,
        messages=messages
    )

    return response

# 서비스 계정 키(JSON 파일)의 경로
cred = credentials.Certificate("C:\\Users\\win\\Documents\\ai-firebase-f501e-firebase-adminsdk-pgie0-832a8c2eb2.json")
# 로컬에 저장할 디렉토리 지정 (예: '/your/local/directory/')
path = 'C:\\Users\\win\\Documents\\GitHub\\-Ai\\input_audio'
# Google Cloud 인증 키 파일 경로 (서비스 계정 키)
credentials_path = "C:\\Users\\win\\Documents\\ai-i-401313-176ecd5ad2cf.json"

# ChatGPT API Key Load
os.environ["OPENAI_API_KEY"] = "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"
openai.api_key = os.environ["OPENAI_API_KEY"]

# Google Cloud TTS 인증 키 파일 경로 (서비스 계정 키)
tts_credentials_path = "C:\\Users\\win\\Documents\\ai-i-401313-176ecd5ad2cf.json"
# 마지막으로 확인한 시간을 기록하는 전역 변수
last_checked_time = time.time()

# Firebase Admin SDK 초기화
bucket_name = 'ai-firebase-f501e.appspot.com'
firebase_admin.initialize_app(cred, {
    'storageBucket': 'ai-firebase-f501e.appspot.com'
})

# 감정분석을 위한 프롬프트 읽어오기
generation_prompt = open('C:\\Users\\win\\Documents\\GitHub\\-Ai\\prompt\\generation_Ai.txt', "r", encoding='utf-8').read()
#print(generation_prompt)

# 모델 - GPT 3.5 Turbo 선택
model = "gpt-3.5-turbo-1106"
print("model: ", model)
#==================#
#   감정 분석하기   |
#==================#
# 사용자의 현재 감정 상태와 상황이 요약되어 Message에 합쳐짐.
prompt = generation_prompt.format(Document=Message_text)
# 메시지 설정하기
messages = [
        {"role": "system", "content": "You are a helpful assistant."},
        {"role": "user", "content": prompt}
]
start = time.time()
# 감정 분석 chatgpt로 진행
Sammary = chatgpt_call(model, messages)['choices'][0]['message']['content']
end = time.time()
print("감정 분석 결과: ")
print(Sammary)
print(f"sentiment analysis Time: {end-start:.5f}sec")
#==================#